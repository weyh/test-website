{"version":3,"sources":["Components/Layouts/Header.js","Components/Layouts/Footer.js","Components/Ext/CCard.js","Components/Ext/PCard.js","Components/Ext/TCard.js","Components/Layouts/Body.js","Components/App.js","serviceWorker.js","index.js"],"names":["props","AppBar","style","background","alignItems","position","Toolbar","Tabs","value","tabIndex","onChange","handleTabChange","indicatorColor","textColor","centered","Tab","label","icon","BottomNavigation","flexGrow","width","zIndex","bottom","BottomNavigationAction","useStyles","makeStyles","theme","card","display","details","flexDirection","content","flex","cover","borderRadius","cardAction","textAlign","classes","ButtonBase","className","onClick","event","window","open","channelUrl","Card","CardMedia","image","imgUrl","title","name","CardContent","Typography","component","variant","color","Tooltip","longDescription","description","minWidth","maxWidth","minHeight","maxHeight","media","height","url","gutterBottom","CardActions","Button","size","Body","figure","channels","playlists","tools","isMobile","other","myCodeExtensions","sites","list","JsonData","map","channel","i","push","Grid","item","key","CCard","container","justify","spacing","playlist","PCard","tool","TCard","site","Fragment","ListItem","button","ListItemText","primary","ListItemSecondaryAction","IconButton","edge","Divider","justifyContent","List","ext","align","marginTop","sort","a","b","localeCompare","this","React","Component","App","state","innerWidth","handleWindowSizeChange","setState","index","addEventListener","removeEventListener","Footer","Header","Boolean","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f827306d.chunk.js","sourcesContent":["import React from \"react\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Tab, Tabs, AppBar, Toolbar } from \"@material-ui/core\";\r\nimport SubscriptionsOutlinedIcon from \"@material-ui/icons/SubscriptionsOutlined\";\r\nimport FeaturedPlayListOutlinedIcon from \"@material-ui/icons/FeaturedPlayListOutlined\";\r\nimport WebOutlinedIcon from \"@material-ui/icons/WebOutlined\";\r\nimport AppsOutlinedIcon from \"@material-ui/icons/AppsOutlined\";\r\nimport ExtensionOutlinedIcon from \"@material-ui/icons/ExtensionOutlined\";\r\n/*\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 10,\r\n    top: 0,\r\n    width: \"100%\",\r\n    position: \"fixed\"\r\n  }\r\n});\r\n*/\r\nexport default props => {\r\n  //const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      style={{ background: \"#fff\", alignItems: \"center\" }}\r\n      position=\"sticky\"\r\n    >\r\n      <Toolbar>\r\n        <Tabs\r\n          value={props.tabIndex}\r\n          onChange={props.handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab label=\"Channels\" icon={<SubscriptionsOutlinedIcon />} />\r\n          <Tab label=\"Playlists\" icon={<FeaturedPlayListOutlinedIcon />} />\r\n          <Tab label=\"Programs\" icon={<AppsOutlinedIcon />} />\r\n          <Tab label=\"Sites\" icon={<WebOutlinedIcon />} />\r\n          <Tab label=\"My VS Code Extensions\" icon={<ExtensionOutlinedIcon />} />\r\n        </Tabs>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n  /*\r\n  return (\r\n    <AppBar style={{ background: \"rgba(255,255,255,0)\" }} position=\"sticky\">\r\n      <Paper style={{ flexGrow: 1 }}>\r\n        <Tabs\r\n          value={props.tabIndex}\r\n          onChange={props.handleTabChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          centered\r\n        >\r\n          <Tab\r\n            label=\"Channels\"\r\n            color=\"inherit\"\r\n            icon={<SubscriptionsOutlinedIcon />}\r\n          />\r\n          <Tab label=\"Playlists\" icon={<FeaturedPlayListOutlinedIcon />} />\r\n          <Tab label=\"Programs\" icon={<AppsOutlinedIcon />} />\r\n          <Tab label=\"Sites\" icon={<WebOutlinedIcon />} />\r\n          <Tab label=\"My VS Code Extensions\" icon={<ExtensionOutlinedIcon />} />\r\n        </Tabs>\r\n      </Paper>\r\n    </AppBar>\r\n  );\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={props.tabIndex}\r\n        onChange={props.handleTabChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab label=\"Channels\" icon={<SubscriptionsOutlinedIcon />} />\r\n        <Tab label=\"Playlists\" icon={<FeaturedPlayListOutlinedIcon />} />\r\n        <Tab label=\"Programs\" icon={<AppsOutlinedIcon />} />\r\n        <Tab label=\"Sites\" icon={<WebOutlinedIcon />} />\r\n        <Tab label=\"My VS Code Extensions\" icon={<ExtensionOutlinedIcon />} />\r\n      </Tabs>\r\n    </Paper>\r\n  );\r\n  */\r\n};\r\n","import React from \"react\";\r\n//import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { BottomNavigation, BottomNavigationAction } from \"@material-ui/core\";\r\nimport SubscriptionsOutlinedIcon from \"@material-ui/icons/SubscriptionsOutlined\";\r\nimport FeaturedPlayListOutlinedIcon from \"@material-ui/icons/FeaturedPlayListOutlined\";\r\nimport WebOutlinedIcon from \"@material-ui/icons/WebOutlined\";\r\nimport AppsOutlinedIcon from \"@material-ui/icons/AppsOutlined\";\r\n/*\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    zIndex: 10,\r\n    bottom: 0,\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    maxWidth: 500\r\n  }\r\n});*/\r\n\r\nexport default props => {\r\n  //const classes = useStyles();\r\n\r\n  return (\r\n    <BottomNavigation\r\n      value={props.tabIndex}\r\n      onChange={props.handleTabChange}\r\n      style={{\r\n        flexGrow: 1,\r\n        width: \"100%\",\r\n        zIndex: 10,\r\n        bottom: 0,\r\n        position: \"fixed\"\r\n      }}\r\n      position=\"sticky\"\r\n    >\r\n      <BottomNavigationAction\r\n        label=\"Channels\"\r\n        value={0}\r\n        icon={<SubscriptionsOutlinedIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Playlists\"\r\n        value={1}\r\n        icon={<FeaturedPlayListOutlinedIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Programs\"\r\n        value={2}\r\n        icon={<AppsOutlinedIcon />}\r\n      />\r\n      <BottomNavigationAction\r\n        label=\"Other\"\r\n        value={4}\r\n        icon={<WebOutlinedIcon />}\r\n      />\r\n    </BottomNavigation>\r\n  );\r\n  /*\r\n  return (\r\n    <Paper square className={classes.root}>\r\n      <Tabs\r\n        value={props.tabIndex}\r\n        onChange={props.handleTabChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n        <Tab icon={<SubscriptionsOutlinedIcon />} />\r\n        <Tab icon={<FeaturedPlayListOutlinedIcon />} />\r\n        <Tab icon={<AppsOutlinedIcon />} />\r\n        <Tab icon={<WebOutlinedIcon />} />\r\n        <Tab icon={<ExtensionOutlinedIcon />} />\r\n      </Tabs>\r\n    </Paper>\r\n  );*/\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  ButtonBase,\r\n  Typography,\r\n  Tooltip\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  card: {\r\n    display: \"flex\",\r\n    width: \"23em\"\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\"\r\n  },\r\n  content: {\r\n    flex: \"1 0 auto\"\r\n  },\r\n  cover: {\r\n    width: \"7em\",\r\n    borderRadius: \"0.2em\"\r\n  },\r\n  cardAction: {\r\n    display: \"block\",\r\n    textAlign: \"initial\"\r\n  }\r\n}));\r\n\r\nexport default props => {\r\n  const classes = useStyles();\r\n\r\n  function openNewTab() {\r\n    window.open(props.channelUrl, \"_blank\");\r\n  }\r\n\r\n  return (\r\n    <ButtonBase className={classes.cardAction} onClick={event => openNewTab()}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.cover}\r\n          image={props.imgUrl}\r\n          title={props.name}\r\n        />\r\n        <div className={classes.details}>\r\n          <CardContent className={classes.content}>\r\n            <Typography component=\"h6\" variant=\"h6\">\r\n              {props.name}\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\" color=\"textSecondary\">\r\n              <Tooltip\r\n                title={\r\n                  props.longDescription !== \"\"\r\n                    ? props.longDescription\r\n                    : props.description\r\n                }\r\n              >\r\n                <span>{props.description}</span>\r\n              </Tooltip>\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </Card>\r\n    </ButtonBase>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardMedia,\r\n  Typography,\r\n  ButtonBase\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    minWidth: 300,\r\n    maxWidth: 345,\r\n    minHeight: 300,\r\n    maxHeight: 315\r\n  },\r\n  media: {\r\n    height: 140\r\n  },\r\n  cardAction: {\r\n    display: \"block\",\r\n    textAlign: \"initial\"\r\n  }\r\n});\r\n\r\nexport default props => {\r\n  const classes = useStyles();\r\n\r\n  function openNewTab() {\r\n    window.open(props.url, \"_blank\");\r\n  }\r\n\r\n  return (\r\n    <ButtonBase className={classes.cardAction} onClick={event => openNewTab()}>\r\n      <Card className={classes.card}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={props.imgUrl}\r\n          title={props.name}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.name}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {props.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </ButtonBase>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Button,\r\n  Typography\r\n} from \"@material-ui/core\";\r\n\r\nexport default props => {\r\n  return (\r\n    <Card style={{ width: 300 }}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {props.name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          {props.description}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button\r\n          size=\"small\"\r\n          onClick={event => window.open(props.url, \"_blank\")}\r\n        >\r\n          Learn More\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  IconButton,\r\n  ListItemSecondaryAction,\r\n  Typography,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport OpenInNewIcon from \"@material-ui/icons/OpenInNew\";\r\nimport { CCard, PCard, TCard } from \"../Ext\";\r\nimport JsonData from \"../../data/data.json\";\r\n\r\nexport default class Body extends React.Component {\r\n  UNSAFE_componentWillMount() {\r\n    JsonData.channels.sort((a, b) =>\r\n      a.description.localeCompare(b.description)\r\n    );\r\n  }\r\n\r\n  figure = () => {\r\n    if (this.props.tabIndex === 0) return this.channels();\r\n    else if (this.props.tabIndex === 1) return this.playlists();\r\n    else if (this.props.tabIndex === 2) return this.tools();\r\n    else if (this.props.tabIndex === 3 && !this.props.isMobile)\r\n      return this.sites();\r\n    else if (this.props.tabIndex === 3) return this.other();\r\n    else if (this.props.tabIndex === 4 && !this.props.isMobile)\r\n      return this.myCodeExtensions();\r\n    else if (this.props.tabIndex === 4) return this.other();\r\n    else return <p>{this.props.tabIndex}</p>;\r\n  };\r\n\r\n  channels = () => {\r\n    let list = [];\r\n\r\n    JsonData.channels.map((channel, i) =>\r\n      list.push(\r\n        <Grid item key={i}>\r\n          <CCard\r\n            name={channel.name}\r\n            channelUrl={channel.channelUrl}\r\n            imgUrl={channel.imgUrl}\r\n            description={channel.description}\r\n            longDescription={channel.longDescription}\r\n          />\r\n        </Grid>\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Grid container justify=\"center\" spacing={2}>\r\n        {list}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  playlists = () => {\r\n    let list = [];\r\n\r\n    JsonData.playlists.map((playlist, i) =>\r\n      list.push(\r\n        <Grid item key={i}>\r\n          <PCard\r\n            name={playlist.name}\r\n            url={playlist.url}\r\n            description={playlist.description}\r\n            imgUrl={playlist.imgUrl}\r\n          />\r\n        </Grid>\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Grid container justify=\"center\" spacing={2}>\r\n        {list}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  tools = () => {\r\n    let list = [];\r\n\r\n    JsonData.tools.map((tool, i) =>\r\n      list.push(\r\n        <Grid item key={i}>\r\n          <TCard\r\n            name={tool.name}\r\n            url={tool.url}\r\n            description={tool.description}\r\n          />\r\n        </Grid>\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Grid container justify=\"center\" spacing={2}>\r\n        {list}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  sites = () => {\r\n    let list = [];\r\n\r\n    JsonData.sites.map((site, i) =>\r\n      list.push(\r\n        <React.Fragment key={i}>\r\n          <ListItem\r\n            key={\"s\" + i}\r\n            button\r\n            alignItems=\"flex-start\"\r\n            onClick={event => window.open(site.url, \"_blank\")}\r\n          >\r\n            <ListItemText primary={site.name} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                onClick={event => window.open(site.url, \"_blank\")}\r\n              >\r\n                <OpenInNewIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <Divider />\r\n        </React.Fragment>\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <List style={{ width: 300 }}>{list}</List>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  myCodeExtensions = () => {\r\n    let list = [];\r\n\r\n    JsonData.myCodeExtensions.map((ext, i) =>\r\n      list.push(\r\n        <React.Fragment key={i}>\r\n          <ListItem\r\n            key={\"mCE\" + i ? !this.props.isMobile : i}\r\n            button\r\n            alignItems=\"flex-start\"\r\n            onClick={event => window.open(ext.url, \"_blank\")}\r\n          >\r\n            <ListItemText primary={ext.name} />\r\n            <ListItemSecondaryAction>\r\n              <IconButton\r\n                edge=\"end\"\r\n                onClick={event => window.open(ext.url, \"_blank\")}\r\n              >\r\n                <OpenInNewIcon />\r\n              </IconButton>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n          <Divider />\r\n        </React.Fragment>\r\n      )\r\n    );\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <List style={{ width: 300 }}>{list}</List>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  other = () => {\r\n    return (\r\n      <>\r\n        <Typography color=\"secondary\" variant=\"h5\" align=\"center\" gutterBottom>\r\n          Useful Sites\r\n        </Typography>\r\n        {this.sites()}\r\n        <Typography\r\n          color=\"secondary\"\r\n          style={{ marginTop: \"1em\" }}\r\n          variant=\"h5\"\r\n          align=\"center\"\r\n          gutterBottom\r\n        >\r\n          My VS Code Extensions\r\n        </Typography>\r\n        {this.myCodeExtensions()}\r\n      </>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div style={{ marginTop: \"1em\" }}>{this.figure()}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\nimport { Footer, Header, Body } from \"./Layouts\";\n\nexport default class App extends React.Component {\n  state = {\n    width: window.innerWidth,\n    tabIndex: 0\n  };\n\n  UNSAFE_componentWillMount() {\n    window.addEventListener(\"resize\", this.handleWindowSizeChange);\n  }\n\n  UNSAFE_componentWillUnmount() {\n    window.removeEventListener(\"resize\", this.handleWindowSizeChange);\n  }\n\n  handleWindowSizeChange = () => {\n    this.setState({ ...this.state, width: window.innerWidth });\n  };\n\n  handleTabChange = (event, index) => {\n    this.setState({ ...this.state, tabIndex: index });\n  };\n\n  render() {\n    const isMobile = this.state.width <= 500;\n\n    if (isMobile) {\n      return (\n        <React.Fragment>\n          <Body tabIndex={this.state.tabIndex} isMobile={isMobile} />\n          <Footer\n            handleTabChange={this.handleTabChange}\n            tabIndex={this.state.tabIndex}\n          />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Header\n            handleTabChange={this.handleTabChange}\n            tabIndex={this.state.tabIndex}\n          />\n          <Body tabIndex={this.state.tabIndex} isMobile={isMobile} />\n        </React.Fragment>\n      );\n    }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nrender(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}